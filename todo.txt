ToDo - in categories
============================

BUGS
====

introscreen image seems broken at upper left corner, but c64fy.py seems ok

At end of dying animation a black empty sprite frame is shown.
maybe sprite pointer is one too big and points to empty space.

background anim now broken! looks like if wrong char is used to generate
animated tiles but all values are as before


VISUAL GLITCHES
===============

blend_in: sprites delay raster irq most probably and give visual glitch, but
not critical. maybe just disable scorepanel by setting fgcol to all
black then


GAMEPLAY EXTENSIONS
===================

implement different actor behavior, either by type or by flag (less types
available then). Generate them pseudo randomly by position (done)
Behaviour: walk with fall down, follow player, flying pattern, flying homing
maybe use only 8 enemies with 1 bit to control behaviour - would reduce
sprite data as well

handle step into trap - animate trap tiles! check where vaporizing tiles are
checked.

add cheat to main menu, like joy up,up,down,down,left,left,right,right and
then number of ups is start level or so...
problem, sprite init may be missed then...


GENERAL FEATURES
================

the animation of the background tile should be level dependant
easier to do it with separate data or separate code.
generation of animation could be done at runtime, as it is now.

have different sprite colors for candy world! rather dark!

implement blend out effect for level end - reverse reading of blend in,
rather easy to do but low effect

main screen: let sprites walk in from left/right below highscore until mid
of screen, then back again, so show all sprites, like a demo.

main screen: color cycling in text?

main screen: high score only 9 places, score 6 chars, so text matches better
width and there is space for sprites (3 lines needed)

main screen: highscore handling with load/save to disk without kernal, or
blend in kernal for this.

outtro: implement game complete screen, e.g. the bacillus logo or some food
picture

outtro: with sprite scroller like turrican end


MORE DATA
=========

implement data for more levels! maybe same tileset and just other level
first, later new tilesets for other worlds/levels
one level with large room only enterable by right walk, closed by vapor tile
More tilesets: candy world / salad world etc.!
candy: bg color 14, fg colors light grey or white and red or dark grey,
individual colors for tiles then all simple colors like red, green, blue,
yellow, purple etc.
candy needs different enemy sprite colors, so set them later (rather dark
colors)
green world, colors light green, green, bright red or orange?
lower individual colors: red, magenta, yellow, maybe mix yellow and light
green for lemon



INFO
====

in interrupts don't save Y register if we don't change it - only in
scoreline irq, and not really critical there

NOTE that changing charset after display of level tile data would be good,
so tiles could use all 256 chars, optimally use last charset and last 20
characters of it (charset at $F800), except last char (where IRQ vectors
are), so only 168 bytes are lost for sprite data. However changing the
VICMEMCTRL register in time (needs a bad line) doesn't work stable and
blend_in sprites further complicates it, so sacrifice 20 characters of tile
charset for now.

Maybe animated boni tiles in hires with white border and white logo like
rotating molecule or jumping water drop, better than what we have now.
No, it doesn't look good.

Scrolling is NOT done in the raster irq, but in main CPU code when bottom of
screen is reached (raster line 251). We also shift color RAM then, which is
the most critical part for timing.
It takes at least 147 raster lines (150 lines ~ 9000cyc with badlines, so
~9cyc per byte to copy, that is rather fast)


Ideas for later
===============

secret passages or rooms in levels - not for this game

player can shoot - not for this game

animate boni tiles

use spare sprites with actor numbers >= 16 as boni or traps.

boss monster - only sensible when player can shoot - not for this game

jump from below to walls for boni - not for this game

if we have only 64 tiles and 8 background tiles as now we can use 24 actor
types, not 16, by using bit6|bit7 as flag of actor! But 16 is enough for
now.

Create or rip some sound effects or music, maybe even try GoatTracker would
be cool. But composing would give most probably poor results due to lack of
experience with high effort. Ripping would be easier.

image converter could change hue of colors of whole image and also
brightness etc to give better results? but rarely needed...

Killed enemy sprite could change to a sprite showing the score that was
added for the kill and the score raises for 1-2 seconds above the enemy
position...

music and sfx is important! play 1-3 sfx or play music in a level. play an
existing SID file would be simplest solution, however we can't distribute it
because of rights? or are they free?

animate level tiles like vertically or horizontally rotating cheese rolls,
maybe better in candy world (later)

implement part of image converter with rle encoding (for logo in upper part
of screen only!)

multicolor extra colors can be changed in certain lines with rasterirq, to
bring more colors, but not easy to manage (the game creatures does it that
way)


Ideas for other games / projects
================================

8-way scrolling and sprite multiplexer would be cool, that way one can
create a Turrican like game.

However randomly or procedurally generated content would be cool. Like a RPG
game with huge world map (256x256 maybe) so that the C64 can generate the
data on the fly. Would also be more interesting to play in unknown data.
Could be done for jump and runs or shoot em ups as well but much harder to
have playable and funny levels that way.
