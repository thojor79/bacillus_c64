ToDo - in categories
============================

BUGS
====

.

VISUAL GLITCHES
===============

blend_in: sprites delay raster irq most probably and give visual glitch, but
not critical. maybe just disable scorepanel by setting fgcol to all
black then

GENERIC
=======

generalize background and tile animation - char no and count and #phases not
hardcoded but per level, i.e. selfmod code or callback routine
or alternativly we modify always the same char and tile numbers in all
tilesets. Number of animation phases per char should be the same or at least
the same for all tilesets.
Store animation data at $0200 or $B000-$B200. 512 bytes are enough for the
background animation (2 chars a 32 phases are 64 chars)
we should use less data for bg animation. 8 byte per char is enough for
64 phases, at 8 phases we can animate 8 chars.
-> always use same tiles, document that.
-> we have enough space for many tiles so fix numbers are no problem
-> animation can be interleaved to various frames so it doesnt take much
raster time


GAMEPLAY EXTENSIONS
===================

have some tiles that vaporize if player is on top of them, e.g. 8 phases
like the small bridges in Giana Sisters. Same check like with boni tiles.

implement different actor behavior, either by type or by flag (less types
available then). Generate them pseudo randomly by position (done)
Behaviour: walk with fall down, follow player, flying pattern, flying homing
maybe use only 8 enemies with 1 bit to control behaviour

have special boni like 1up, kill-all-enemies-on-screen, invulnerable

handle step into hole/trap

>>>
implement high score enter and management, that is improve main screen

secret passages or rooms in levels

score dependent on enemy type (with table)


GENERAL FEATURES
================

implement blend out effect for level end - reverse reading of blend in,
rather easy but rarely used

implement dying animation with morph to skull or so

implement game complete screen (outtro)

implement part of image converter with rle encoding (for logo in upper part
of screen only!)

iamge converter could change hue of colors of whole image and also
brightness etc to give better results? but rarely needed...


MORE DATA
=========

make more tile graphics for cheese:
diagonal and vertically stacked parts of cheese
orange perimeter like limburger
with red,blue,green speckles
dripping cheese.
category: floor, ceiling, obstacle a/B and island and traps

>>>
implement data for more levels! maybe same tileset and just other level
first, later new tilesets for other worlds/levels
with level2 and same tileset we can check level init code then.
More tilesets: candy world / salad world etc.

implement more enemies:
long legs
one consisting only of eyes
etc.

background animated tiles with fire/knives/diamond like cheese parts?
maybe some spare sprites with actor numbers >= 16 as boni or traps.




INFO
====

in interrupts don't save Y register if we don't change it - only in
scoreline irq, and not really critical there

NOTE that changing charset after display of level tile data would be good,
so tiles could use all 256 chars, optimally use last charset and last 20
characters of it (charset at $F800), except last char (where IRQ vectors
are), so only 168 bytes are lost for sprite data. However changing the
VICMEMCTRL register in time (needs a bad line) doesn't work stable and
blend_in sprites further complicates it, so sacrifice 20 characters of tile
charset for now.

Maybe animated boni tiles in hires with white border and white logo like
rotating molecule or jumping water drop, better than what we have now.
No, it doesn't look good.



Ideas for later
===============

if we have only 64 tiles and 8 background tiles as now we can use 24 actor
types, not 16, by using bit6|bit7 as flag of actor! But 16 is enough for
now.

Create or rip some sound effects or music, maybe even try GoatTracker would
be cool. But composing would give most probably poor results due to lack of
experience with high effort. Ripping would be easier.

Ideas for other games / projects
================================

8-way scrolling and sprite multiplexer would be cool, that way one can
create a Turrican like game.

However randomly or procedurally generated content would be cool. Like a RPG
game with huge world map (256x256 maybe) so that the C64 can generate the
data on the fly. Would also be more interesting to play in unknown data.
Could be done for jump and runs or shoot em ups as well but much harder to
have playable and funny levels that way.
