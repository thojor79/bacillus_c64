ToDo - higher priority first
============================

try to use different charset for status bar. 20 chars eat just 3 sprites, if
timing allows to switch memory registers. so we can use full 256 chars for
tiles and have less problems. 
even better: use last bytes for characters, so don't use chars 0-19 but
235-254 and leave 255 out and place them at end of ram! ->
irq vectors are kept writeable and free and sprites still start at
$E000 - best solution!
offset status bar characters by 235 and copy the data there -> done!
test it in steps, move chardata to 235+ and draw chars 235+, then use
mem register change in irq , better do it first and check timing!

implement data for more levels! maybe same tileset and just other level
first, later new tilesets for other worlds/levels

fix intro - only sprite display in irq, coordinate computation in normal
code. not much work then intro is done!

do not use spawn_actor for player? then less checks there needed.
player start position must not come from level data then, but startpos
xy coded additionally, maybe not code player in level data so we can have
16 enemies, not 15. use type 16 then for player. an extra check in that
routine doesn't matter

boni in uppermost line can not be collected because actor can't go high
enough to collect them

background animation generalize - char no and count and #phases not
hardcoded but per level, i.e. selfmod code!
how to handle multiple animated characters with different number of phases?
number of animation phases should be the same, character range with
animations should ideally be the same - but with background and foreground
animation this is not simple.
alternativly use same char numbers and animation phases for all levels - 
simplest solution
i.e. move char animation data to $B000-$B200. 512 bytes are enough for the
background animation (2 chars a 32 phases are 64 chars)
we should use less data for bg animation. 8 byte per char is enough for
64 phases, at 8 phases we can animate 8 chars.

background animated tiles with fire/knives/diamond like cheese parts?
maybe some spare sprites with actor numbers >= 16 as boni or traps.

more tiles: cheese dripping from above, animated tiles like cheese rolls
rotating etc.

store more temporary data in zeropage or at $0200, define space centrally in game.a
mostly checked!
checks pending:
blendin
game
intro (can use same space as scrolling!)

implement blend out effect for level end - reverse reading of blend in,
rather easy but rarely used

implement different actor behavior, either by type or by flag (less types
available then). Generate them pseudo randomly by position (done)
Behaviour: walk with fall down, follow player, flying pattern, flying homing

implement dying animation with morph to skull or so

implement high score enter and management

game over: wait for joy button not in first 1-2 seconds

implement game complete screen (outtro)

implement part of image converter with rle encoding

Ideas for later
===============

if we have only 64 tiles and 8 background tiles as now we can use 24 actor
types, not 16, by using bit6|bit7 as flag of actor! But 16 is enough for
now.
